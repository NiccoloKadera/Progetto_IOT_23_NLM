[
    {
        "id": "b0701f164c4c3557",
        "type": "tab",
        "label": "Invio Progetto Finale",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c1dda770105b0a2",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200.00001525878906,
        "y": 211.11111450195312,
        "wires": [
            [
                "d8c2cad28c9241da"
            ]
        ]
    },
    {
        "id": "5d781d9c69d8f19a",
        "type": "rpi-dht22",
        "z": "b0701f164c4c3557",
        "name": "",
        "topic": "rpi-dht22",
        "dht": "11",
        "pintype": "0",
        "pin": "5",
        "x": 680.0000152587891,
        "y": 211.11111450195312,
        "wires": [
            [
                "2388ea4881404885"
            ]
        ]
    },
    {
        "id": "d6199181151fec3c",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "dht11",
        "info": "VCC - 3v3\nGND - GND (primo in alto)\nSIG - GPIO5",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "f3d077a8e2679d3a",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "Mac Raspberry",
        "info": "Ether\n\neth0: d8:3a:dd:59:40:20\nwlan0: d8:3a:dd:59:40:21",
        "x": 230,
        "y": 1020,
        "wires": []
    },
    {
        "id": "519e281f509ac626",
        "type": "exec",
        "z": "b0701f164c4c3557",
        "command": "ifconfig eth0 | grep ether",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "e4f15ab5f1b6603f"
            ],
            [],
            []
        ]
    },
    {
        "id": "e2015ada64ca1198",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1080,
        "wires": [
            [
                "519e281f509ac626"
            ]
        ]
    },
    {
        "id": "93bc2ab404da6225",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e4f15ab5f1b6603f",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substring(payload, 14, 17)\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "ObjectID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1080,
        "wires": [
            [
                "93bc2ab404da6225"
            ]
        ]
    },
    {
        "id": "4106881af7ef7012",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Temperature",
                "pt": "msg",
                "to": "correctTemp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "f8903b694a493070",
                "52d834c65e072bcd",
                "b6db691c73aa9977"
            ]
        ]
    },
    {
        "id": "f8903b694a493070",
        "type": "http request",
        "z": "b0701f164c4c3557",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "query",
        "url": "0028544.azurewebsites.net/humidityHTTP",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1730,
        "y": 260,
        "wires": [
            [
                "4bb6cb08d7308f71"
            ]
        ]
    },
    {
        "id": "e5ebec7d1cef21fb",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 260,
        "wires": []
    },
    {
        "id": "4bb6cb08d7308f71",
        "type": "json",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 260,
        "wires": [
            [
                "e5ebec7d1cef21fb"
            ]
        ]
    },
    {
        "id": "25636fb720119f86",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 780,
        "wires": [
            [
                "66bfd19c1b7f7097"
            ]
        ]
    },
    {
        "id": "a33c01457a37aa30",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 780,
        "wires": []
    },
    {
        "id": "1804b78094347299",
        "type": "json",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 780,
        "wires": [
            [
                "01724db1de15f783"
            ]
        ]
    },
    {
        "id": "01724db1de15f783",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 780,
        "wires": [
            [
                "a33c01457a37aa30"
            ]
        ]
    },
    {
        "id": "66bfd19c1b7f7097",
        "type": "http request",
        "z": "b0701f164c4c3557",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "0028544.azurewebsites.net/humidityHTTP",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 780,
        "wires": [
            [
                "1804b78094347299"
            ]
        ]
    },
    {
        "id": "72d1c335a69c6cdb",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Temperature\":37,\"ID\":2}",
        "payloadType": "json",
        "x": 190,
        "y": 860,
        "wires": [
            [
                "bc13d8d326056d18"
            ]
        ]
    },
    {
        "id": "c09eb0089faf3102",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 860,
        "wires": []
    },
    {
        "id": "3938c2b944aa8a92",
        "type": "json",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 860,
        "wires": [
            [
                "01be7228433ac523"
            ]
        ]
    },
    {
        "id": "bc13d8d326056d18",
        "type": "http request",
        "z": "b0701f164c4c3557",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "0028544.azurewebsites.net/humidityHTTP",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 860,
        "wires": [
            [
                "3938c2b944aa8a92"
            ]
        ]
    },
    {
        "id": "01be7228433ac523",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 860,
        "wires": [
            [
                "c09eb0089faf3102"
            ]
        ]
    },
    {
        "id": "61fee0726845fb6e",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"rowid\":1}",
        "payloadType": "json",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "6802830b3454b5c3"
            ]
        ]
    },
    {
        "id": "2ef61d5564a7f81d",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 940,
        "wires": []
    },
    {
        "id": "5ddc302afe253bd8",
        "type": "json",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 940,
        "wires": [
            [
                "e164ad118f17ac4f"
            ]
        ]
    },
    {
        "id": "6802830b3454b5c3",
        "type": "http request",
        "z": "b0701f164c4c3557",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "0028544.azurewebsites.net/humidityHTTP",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 940,
        "wires": [
            [
                "5ddc302afe253bd8"
            ]
        ]
    },
    {
        "id": "e164ad118f17ac4f",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 940,
        "wires": [
            [
                "2ef61d5564a7f81d"
            ]
        ]
    },
    {
        "id": "6dc95096d740ecc2",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "Touch Swich",
        "info": "VCC - 3v3\nGND - GND (primo in alto)\nSIG - GPIO23",
        "x": 210,
        "y": 440,
        "wires": []
    },
    {
        "id": "ee6c6f9990aed374",
        "type": "rpi-gpio in",
        "z": "b0701f164c4c3557",
        "name": "",
        "pin": "23",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "2dfd0943e8ae6163"
            ]
        ]
    },
    {
        "id": "3ceb252d200754c7",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "6fcaef9a5c411898",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "HTTP",
        "info": "",
        "x": 170,
        "y": 700,
        "wires": []
    },
    {
        "id": "b0db84a3db663a76",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "LED",
        "info": "R - GPIO 20\nGND - GND (Ultimo in basso)\ng - gpio 21",
        "x": 950,
        "y": 460,
        "wires": []
    },
    {
        "id": "52d834c65e072bcd",
        "type": "switch",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "payload.Humidity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "LastHum",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "LastHum",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 990,
        "y": 520,
        "wires": [
            [
                "8d1d4aea30e25760",
                "0d4d5f4071fcd1f9",
                "af3f0a3b4062a3ad"
            ],
            [
                "9548a7376acf9abc"
            ],
            [
                "c807d3b1ed8e9e9a",
                "3a905252c9bad572",
                "af3f0a3b4062a3ad"
            ]
        ]
    },
    {
        "id": "8d1d4aea30e25760",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "0d4d5f4071fcd1f9",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c807d3b1ed8e9e9a",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3a905252c9bad572",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "af3f0a3b4062a3ad",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LastHum",
                "pt": "global",
                "to": "payload.Humidity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "9548a7376acf9abc",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d8c2cad28c9241da",
        "type": "switch",
        "z": "b0701f164c4c3557",
        "name": "",
        "property": "autoCheck",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400.00001525878906,
        "y": 211.11111450195312,
        "wires": [
            [
                "b02a7a860defb9d1"
            ]
        ]
    },
    {
        "id": "2dfd0943e8ae6163",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "autoCheck",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "3ceb252d200754c7"
            ]
        ]
    },
    {
        "id": "d7cd7831337e7063",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "Accendi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "e2f2bf7fb163b5d6"
            ]
        ]
    },
    {
        "id": "e2f2bf7fb163b5d6",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "2dfd0943e8ae6163"
            ]
        ]
    },
    {
        "id": "b02a7a860defb9d1",
        "type": "sensor-ds18b20",
        "z": "b0701f164c4c3557",
        "name": "",
        "topic": "",
        "sensorid": "28-06201568d8b1",
        "timer": "60",
        "repeat": false,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "86a9f55cfda34d83"
            ]
        ]
    },
    {
        "id": "2388ea4881404885",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ObjectID\": $globalContext(\"ObjectID\"),\t    \"Temperature\": payload,\t    \"Humidity\": humidity,\t    \"Timestamp\": $now()\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 200,
        "wires": [
            [
                "4106881af7ef7012"
            ]
        ]
    },
    {
        "id": "86a9f55cfda34d83",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "correctTemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 280,
        "wires": [
            [
                "5d781d9c69d8f19a"
            ]
        ]
    },
    {
        "id": "b6db691c73aa9977",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 140,
        "wires": []
    },
    {
        "id": "ecbd2bd9.95c6d8",
        "type": "python-function",
        "z": "b0701f164c4c3557",
        "name": "",
        "func": "#!/usr/bin/env python3\n#------------------------------------------------------\n#\n#\t\tThis is a program for PCF8591 Module.\n#\n#\t\tWarnng! The Analog input MUST NOT be over 3.3V!\n#    \n#\t\tIn this script, we use a poteniometer for analog\n#   input, and a LED on AO for analog output.\n#\n#\t\tyou can import this script to another by:\n#\timport PCF8591 as ADC\n#\t\n#\tADC.Setup(Address)  # Check it by sudo i2cdetect -y -1\n#\tADC.read(channal)\t# Channal range from 0 to 3\n#\tADC.write(Value)\t# Value range from 0 to 255\t\t\n#\n#------------------------------------------------------\nimport smbus\nimport time\n\n# for RPI version 1, use \"bus = smbus.SMBus(0)\"\nbus = smbus.SMBus(1)\n\n#check your PCF8591 address by type in 'sudo i2cdetect -y -1' in terminal.\ndef setup(Addr):\n\tglobal address\n\taddress = Addr\n\ndef read(chn): #channel\n\ttry:\n\t\tif chn == 0:\n\t\t\tbus.write_byte(address,0x40)\n\t\tif chn == 1:\n\t\t\tbus.write_byte(address,0x41)\n\t\tif chn == 2:\n\t\t\tbus.write_byte(address,0x42)\n\t\tif chn == 3:\n\t\t\tbus.write_byte(address,0x43)\n\t\tbus.read_byte(address) # dummy read to start conversion\n\texcept Exception as e:\n\t\tmsg[\"error\"]=(\"Address: %s\" % address)\n\treturn bus.read_byte(address)\n\ndef write(val):\n\ttry:\n\t\ttemp = val # move string value to temp\n\t\ttemp = int(temp) # change string to integer\n\t\t# print temp to see on terminal else comment out\n\t\tbus.write_byte_data(address, 0x40, temp)\n\texcept Exception as e:\n\t\tmsg[\"error\"]=(\"Error: Device address: 0x%2X\" % address)\n\nif __name__ == \"__main__\":\n\tsetup(0x48)\n\tmsg[\"payload\"]=read(msg[\"payload\"])\nreturn msg",
        "outputs": 1,
        "x": 660,
        "y": 60,
        "wires": [
            [
                "e8f14fb0.166ff"
            ]
        ]
    },
    {
        "id": "8edfac55.81ae7",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "ecbd2bd9.95c6d8"
            ]
        ]
    },
    {
        "id": "e8f14fb0.166ff",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "912eba93ae956d01",
        "type": "comment",
        "z": "b0701f164c4c3557",
        "name": "DS18B20",
        "info": "\nSensore: DS18B20\n\nSensore temperatura GPIO:\n - GND -> GND in alto a sinistra\n - SIG -> GPIO4\n - VCC -> 3v3\n\n\nNodi:\n - node-red-contrib-sensor-ds18b20\n - node-red-contrib-ds18b20-sensor\n",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "be89925408c26323",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "Spegni",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 640,
        "wires": [
            [
                "7e74194721cf6868"
            ]
        ]
    },
    {
        "id": "7e74194721cf6868",
        "type": "change",
        "z": "b0701f164c4c3557",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 640,
        "wires": [
            [
                "2dfd0943e8ae6163"
            ]
        ]
    },
    {
        "id": "60f043648c7d64df",
        "type": "python-function",
        "z": "b0701f164c4c3557",
        "name": "",
        "func": "#!/usr/bin/env python3\n#------------------------------------------------------\n#\n#\t\tThis is a program for PCF8591 Module.\n#\n#\t\tWarnng! The Analog input MUST NOT be over 3.3V!\n#    \n#\t\tIn this script, we use a poteniometer for analog\n#   input, and a LED on AO for analog output.\n#\n#\t\tyou can import this script to another by:\n#\timport PCF8591 as ADC\n#\t\n#\tADC.Setup(Address)  # Check it by sudo i2cdetect -y -l\n#\tADC.read(channal)\t# Channal range from 0 to 3\n#\tADC.write(Value)\t# Value range from 0 to 255\t\t\n#\n#------------------------------------------------------\nimport smbus\nimport time\nimport adafruit_pcf8591.pcf8591  as ADC\nimport RPi.GPIO as GPIO\n\n# for RPI version 1, use \"bus = smbus.SMBus(0)\"\nbus = smbus.SMBus(1)\nDO = 17\nGPIO.setmode(GPIO.BCM)\n\n#check your PCF8591 address by type in 'sudo i2cdetect -y -l' in terminal.\ndef setup(Addr):\n\tglobal address\n\taddress = Addr\n\tADC.setup(Addr)\n\tGPIO.setup(DO, GPIO.IN)\n\ndef read(chn): #channel\n\ttry:\n\t\tbus.read_byte(address) # dummy read to start conversion\n\texcept Exception as e:\n\t\tmsg[\"error\"]=(\"Address: %s\" % address)\n\treturn bus.read_byte(address)\n\nif __name__ == \"__main__\":\n\tsetup(0x48)\n\tmsg[\"payload\"]=read(msg[\"payload\"])\nreturn msg",
        "outputs": 1,
        "x": 640,
        "y": 120,
        "wires": [
            [
                "649ff2db19e8bc93"
            ]
        ]
    },
    {
        "id": "50321022aaa0eb36",
        "type": "inject",
        "z": "b0701f164c4c3557",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "60f043648c7d64df"
            ]
        ]
    },
    {
        "id": "649ff2db19e8bc93",
        "type": "debug",
        "z": "b0701f164c4c3557",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 120,
        "wires": []
    }
]